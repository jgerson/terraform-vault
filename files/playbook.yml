---
# File: playbook.yml - evolve Vault locally for demo purpose
# ansible-playbook playbook.yml

- name: Evolve Vault for Demo - root
  hosts: 127.0.0.1
  connection: local
  any_errors_fatal: true
  become: true
  become_user: root
  tasks:
  - name: install required packages
    apt:
      pkg: ['zsh', 'nginx', 'jq', 'unzip']
      state: latest

  - name: Download Pet, Simple command-line snippet manager, written in Go.
    get_url:
      url: https://github.com/knqyf263/pet/releases/download/v0.3.2/pet_0.3.2_linux_amd64.deb
      dest: /tmp/

  - name: Install Pet
    apt:
      deb: /tmp/pet_0.3.2_linux_amd64.deb
      state: present

  - name: Consul-template download
    get_url:
      url: https://releases.hashicorp.com/consul-template/0.19.5/consul-template_0.19.5_linux_amd64.zip
      dest: /tmp/

  - name: Consul-template installation
    unarchive:
      src: /tmp/consul-template_0.19.5_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes

  - name: Consul-template related directories
    file:
      path: "{{item}}"
      state: directory
    with_items: ["/etc/consul-template.d/", "/etc/nginx/tls/"]

  - name: Consult-template configuration and templates
    copy:
      src: "{{item.key}}"
      dest: "{{item.value}}"
    with_dict: {"/tmp/pki-demo.hcl": "/etc/consul-template.d/pki-demo.hcl", "/tmp/cert.tpl": "/etc/consul-template.d/cert.tpl", "/tmp/key.tpl": "/etc/consul-template.d/key.tpl", "/tmp/consul-template.service": "/etc/systemd/system/consul-template.service"}

  - name: copy the nginx config file and restart nginx
    copy:
      src: /tmp/nginx.cfg
      dest: /etc/nginx/sites-available/nginx.cfg

  - name: create symlink
    file:
      src: /etc/nginx/sites-available/nginx.cfg
      dest: /etc/nginx/sites-enabled/default
      state: link

  - name: restart nginx
    service:
      name: nginx
      state: restarted

- name: Evolve Vault for demo - normal user
  hosts: 127.0.0.1
  connection: local
  any_errors_fatal: true

  tasks:
  - name: Clone Oh My Zsh! repository
    git:
      repo: https://github.com/planetrobbie/oh-my-zsh.git
      dest: "{{ ansible_env.HOME }}/.oh-my-zsh"

  - name: Create a new zsh config from the template in the repo
    command: cp {{ ansible_env.HOME }}/.oh-my-zsh/templates/zshrc.zsh-template {{ ansible_env.HOME }}/.zshrc
    args:
      creates: "{{ ansible_env.HOME }}/.zshrc"

  - name: Set zsh as default shell
    user:
      name: "{{ ansible_user }}"
      shell: /usr/bin/zsh
    sudo: yes

  - name: mirror fzf Pet dependency from github
    git:
      repo: 'https://github.com/junegunn/fzf.git'
      depth: 1
      dest: ~/.fzf
      update: no

  - name: install fzf
    command: ~/.fzf/install --all

  - name: Creates Pet config directory
    file:
      path: "{{ ansible_env.HOME }}/.config/pet"
      state: directory

  - name: Clone Pet Snippets to config directory
    copy:
      remote_src: True
      src: /tmp/snippet.toml
      dest: "{{ ansible_env.HOME }}/.config/pet/"

  - name: Vault Environment Variable
    lineinfile:
      dest: "{{ ansible_env.HOME }}/.zshrc"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      - { regexp: 'VAULT_ADDR', line: 'export VAULT_ADDR="${vault_address}"' }
      - { regexp: 'VAULT_CACERT', line: 'export VAULT_CACERT="/etc/vault/tls/ca.crt"' }
